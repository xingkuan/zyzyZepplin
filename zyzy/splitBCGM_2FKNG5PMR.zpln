{
  "paragraphs": [
    {
      "title": "create info_src record",
      "text": "import codecs\nimport re\nimport psycopg2\n\n# infobots are to be stored in a database, to be furtuer parsed into finer infobot    \nconn \u003d psycopg2.connect(database\u003d\"infostg\", user\u003d\"postgres\", password\u003d\"post\", host\u003d\"127.0.0.1\", port\u003d\"5432\")\n#print(\"Database opened successfully\")\ncur \u003d conn.cursor()\nsql \u003d \"\"\"INSERT INTO info_src(id, name, meta)\n        VALUES(1, \u0027本草纲目\u0027, \u0027{\"排版\":\"金陵版\",\"出版者\":\"人民卫生出版社\"}\u0027) ;\"\"\"\n\ncur.execute(sql)\n\nconn.commit()\ncur.close()\nconn.close()",
      "user": "anonymous",
      "dateUpdated": "2021-03-11 21:37:12.432",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": false,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true
        },
        "editorMode": "ace/mode/python",
        "title": true,
        "lineNumbers": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1615512547400_2066949364",
      "id": "paragraph_1615512547400_2066949364",
      "dateCreated": "2021-03-11 17:29:07.400",
      "dateStarted": "2021-03-11 17:44:40.422",
      "dateFinished": "2021-03-11 17:44:40.449",
      "status": "FINISHED"
    },
    {
      "title": "input File",
      "text": "iFile \u003d z.input(\"iFile\")\nz.put(\"fileName\", iFile)",
      "user": "anonymous",
      "dateUpdated": "2021-05-02 20:44:30.089",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true
        },
        "editorMode": "ace/mode/python",
        "title": true,
        "editorHide": true,
        "tableHide": true
      },
      "settings": {
        "params": {
          "iFile": "/home/celine/SHARED/LinuxWS/ZhongYi/bencaoganmu/Data/viEdited/04prefix_1.txt"
        },
        "forms": {
          "iFile": {
            "type": "TextBox",
            "name": "iFile",
            "displayName": "iFile",
            "defaultValue": "",
            "hidden": false
          }
        }
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1604093612573_1209585539",
      "id": "paragraph_1604093612573_1209585539",
      "dateCreated": "2020-10-30 14:33:32.573",
      "dateStarted": "2021-05-02 20:44:30.162",
      "dateFinished": "2021-05-02 20:44:35.923",
      "status": "FINISHED"
    },
    {
      "title": "functions",
      "text": "import psycopg2\n\n# extrac chapter number from file name, which is to be used in the infobot name\ndef getChpNum(fileName):\n    nParts \u003d fileName.rsplit(\u0027/\u0027,1)\n    chpN \u003d nParts[1]    #eg: 02intro_1.txt\n    #print(chpN[0:2])        \n    return int(chpN[:2])    #  int(\u002702\u0027) \u003d\u003d\u003e2\n\n#For本草纲目,divide the info into 4 layers, and the id is constructed as\n#  chNum*1000000 + divNum*10000 + bNum*100 + b2Num\ndef genSeq(chNum, pathSpec):\n    seqs \u003d list(map(lambda x: int(x[\u0027sequence\u0027]), pathSpec))\n    print(seqs)\n    for i in range(len(seqs),4):\n        seqs.append(0)\n    print(seqs)\n    return chNum*1000000000 + seqs[0]*1000000 + seqs[1]*10000 + seqs[2]*100 + seqs[3]\n\ndef saveDB(seq, name, meta, content):\n    sql \u003d \"\"\"INSERT INTO info_stg(src_id, seq, name, meta, version, content)\n        VALUES(1, %s, %s, %s, 0, %s) ;\"\"\"\n    conn \u003d psycopg2.connect(database\u003d\"infostg\", user\u003d\"postgres\", password\u003d\"post\", host\u003d\"127.0.0.1\", port\u003d\"5432\")\n    cur \u003d conn.cursor()\n    cur.execute(sql, (seq, name, meta, content))\n    conn.commit()\n    cur.close()\n    conn.close()",
      "user": "anonymous",
      "dateUpdated": "2021-05-02 20:44:32.653",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true
        },
        "editorMode": "ace/mode/python",
        "title": true,
        "lineNumbers": true,
        "tableHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1615527580682_952640392",
      "id": "paragraph_1615527580682_952640392",
      "dateCreated": "2021-03-11 21:39:40.683",
      "dateStarted": "2021-05-02 20:44:32.666",
      "dateFinished": "2021-05-02 20:44:35.948",
      "status": "FINISHED"
    },
    {
      "title": "devel",
      "text": "import codecs\nimport re\nimport psycopg2\nimport json\n\nimport random\nimport string\n\n#iFile \u003d z.input(\"iFile\")\niFile \u003d z.get(\"fileName\")\nlevelTarget\u003d0\npath_spec\u003d[]\nlState\u003d-1  #-1: skip; 0: include; 1: begining; 2: ending\nvContent \u003d \"\"\nins\u003dNone\nvSource \u003d u\"《本草纲目》\"\noFileName \u003d \"\"\n\nemptyLnCnt \u003d 0\n\ndef initPathSpec(n):\n    global path_spec\n    path_spec.clear()\n    for i in range(n+1):\n        temp\u003d{\u0027title\u0027: \u0027\u0027,\n            #  \u0027status\u0027: 0,       #0: n/a; 1: skip, 2: include, 3: last line  \u003d\u003dline status is not part of this structure\n              \u0027sequence\u0027: 0,\n              \u0027meta\u0027:None,\n              \u0027isOpen\u0027: False}    #sequence\n        path_spec.append(temp)\n\n\ndef stage1(line):\n    global lState, path_spec, vContent\n    temp\u003dre.match(\u0027^\u003cb(\\d)(.*)$\u0027, line)   #tag is optional\n    if(temp):\n        level \u003d int(temp.groups()[0])\n        if level \u003e levelTarget:\n            #print(\"Skip \"+ str(level)+\". Should be processed at the next level.\")\n            lState \u003d -1          #-1: skip;     0: include;       1: begining;         2: ending\n            return True\n        else:\n            title \u003d temp.groups()[1].strip()\n            meta \u003d None\n            temp1\u003dre.match(\"(.*)\u003c(.*)\u003e\", title)\n            if temp1:\n                title \u003d temp1.groups()[0].strip()\n                meta \u003d temp1.groups()[1].strip()\n            #print(level, title, tag)    \n            path_spec[level][\"title\"]\u003dtitle\n            path_spec[level][\"meta\"]\u003dmeta\n            path_spec[level][\"sequence\"] +\u003d1\n            if path_spec[level][\"isOpen\"]:\n                print(\"ERROR: looks like tag \"+str(level)+\"is open already!\")\n                print(line)\n                return False\n            print(\"open \"+str(level))\n            path_spec[level][\"isOpen\"]\u003dTrue\n            if (level\u003d\u003dlevelTarget):\n                lState\u003d1\n            else:   #parent changed, so reset the sequence number\n                path_spec[levelTarget][\"sequence\"]\u003d0   \n            return True\n    temp\u003dre.match(\u0027b(\\d)\u003e\u0027, line)   #tag is optional\n    if(temp):\n        level \u003d int(temp.groups()[0])\n        if level \u003e levelTarget + 1:\n            return True\n        elif level \u003d\u003d levelTarget+1:  #this way, lines divided by childrens can be consolidated into a contigueous one\n            lState\u003d-2\n        else:\n            if not path_spec[level][\"isOpen\"]:\n                print(\"Error: perhaps missing open tag for this closing tag \" + str(level))\n                print(line)\n                return False\n            print(\"closing \"+str(level))\n            path_spec[level][\"isOpen\"]\u003dFalse\n            if(level\u003d\u003dlevelTarget):    \n                lState\u003d2\n            return True\n    #content line, just return\n    return True\n        \ndef stage2(line):\n    global lState, path_spec, vContent,emptyLnCnt\n    #print(lState)\n    if (lState\u003d\u003d-1):\n        return\n    elif (lState\u003d\u003d-2):\n        lState\u003d0\n\n    elif (lState\u003d\u003d0):\n        if(re.match(\u0027^$\u0027, line)):\n            emptyLnCnt +\u003d 1\n        else:\n            emptyLnCnt \u003d 0\n\n        if (emptyLnCnt \u003e 1):\n            return    # skip consective empty lines\n\n        vContent \u003d vContent + line\n    elif (lState\u003d\u003d1):\n        lState\u003d0\n        vContent \u003d \u0027\u0027\n    elif(lState\u003d\u003d2):\n        path_spec[levelTarget][\"isOpen\"]\u003dFalse\n        lState\u003d-1\n        saveXXX()\n\n    return\n\ndef saveXXX():\n    vSrcFileNum \u003d getChpNum(iFile)\n    print(vSrcFileNum)\n    seq \u003d genSeq(vSrcFileNum, path_spec )\n    title\u003d\u0027\u0027\n    if levelTarget\u003d\u003d0:\n        title \u003d path_spec[0][\u0027title\u0027]\n    else:\n        for i in range(1,levelTarget+1):\n            title \u003d title+\u0027-\u003e\u0027+path_spec[i][\u0027title\u0027]\n            print(title)\n    meta \u003d path_spec[levelTarget][\u0027meta\u0027]\n    print(seq, title, meta)\n    #print(vContent)\n    saveDB(seq, title, meta, vContent)\n        \ndef mainOfSplit(target):\n    global levelTarget, ins, path_spec\n    \n    ins \u003d codecs.open(iFile, \"r\", encoding\u003d\"utf8\")\n\n    levelTarget\u003dtarget\n\n    for line in ins:\n        #print(line)\n        if not stage1(line):\n            break\n        #print(json.dumps(path_spec))\n        #print(lState)\n        stage2(line)\n    print(\"***completed level: \", target)\n    ins.close()\n    return\n\n### main ###\n#mainOfSplit(3)\ndepth\u003d4\nfor i in range(0, depth):\n    print(i)\n    initPathSpec(i)\n    print(json.dumps(path_spec))\n    mainOfSplit(i)\n",
      "user": "anonymous",
      "dateUpdated": "2021-05-02 21:30:08.176",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true
        },
        "editorMode": "ace/mode/python",
        "title": true,
        "lineNumbers": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "0\n[{\"title\": \"\", \"sequence\": 0, \"meta\": null, \"isOpen\": false}]\nopen 0\nclosing 0\n4\n[1]\n[1, 0, 0, 0]\n4001000000 历代诸家本草 None\nopen 0\nclosing 0\n4\n[2]\n[2, 0, 0, 0]\n4002000000 literature list None\nopen 0\nclosing 0\n4\n[3]\n[3, 0, 0, 0]\n4003000000 采集诸家本草药品总数 None\nopen 0\nclosing 0\n4\n[4]\n[4, 0, 0, 0]\n4004000000 Reviews None\nopen 0\nclosing 0\n4\n[5]\n[5, 0, 0, 0]\n4005000000 processing None\nopen 0\nclosing 0\n4\n[6]\n[6, 0, 0, 0]\n4006000000 attitudes None\nopen 0\nclosing 0\n4\n[7]\n[7, 0, 0, 0]\n4007000000 prescriptions None\nopen 0\nclosing 0\n4\n[8]\n[8, 0, 0, 0]\n4008000000 陶隐居《名医别录》合药分剂法则 None\nopen 0\nclosing 0\n4\n[9]\n[9, 0, 0, 0]\n4009000000 principles None\nopen 0\nclosing 0\n4\n[10]\n[10, 0, 0, 0]\n4010000000 采药分六气岁物 None\nopen 0\nclosing 0\n4\n[11]\n[11, 0, 0, 0]\n4011000000 七方 None\nopen 0\nclosing 0\n4\n[12]\n[12, 0, 0, 0]\n4012000000 十剂 None\nopen 0\nclosing 0\n4\n[13]\n[13, 0, 0, 0]\n4013000000 方 tag:方\nopen 0\nclosing 0\n4\n[14]\n[14, 0, 0, 0]\n4014000000 气味阴阳 hypothesis:[气,味]\nopen 0\nclosing 0\n4\n[15]\n[15, 0, 0, 0]\n4015000000 脏腑虚实标本用药式 None\nopen 0\nclosing 0\n4\n[16]\n[16, 0, 0, 0]\n4016000000 引经报使 source:（洁古《珍珠囊》）\n***completed level:  0\n1\n[{\"title\": \"\", \"sequence\": 0, \"meta\": null, \"isOpen\": false}, {\"title\": \"\", \"sequence\": 0, \"meta\": null, \"isOpen\": false}]\nopen 0\nopen 1\nclosing 1\n4\n[1, 1]\n[1, 1, 0, 0]\n-\u003e《神农本草经》\n4001010000 -\u003e《神农本草经》 None\nopen 1\nclosing 1\n4\n[1, 2]\n[1, 2, 0, 0]\n-\u003e《名医别录》\n4001020000 -\u003e《名医别录》 None\nopen 1\nclosing 1\n4\n[1, 3]\n[1, 3, 0, 0]\n-\u003e《桐君采药录》\n4001030000 -\u003e《桐君采药录》 None\nopen 1\nclosing 1\n4\n[1, 4]\n[1, 4, 0, 0]\n-\u003e《雷公药对》\n4001040000 -\u003e《雷公药对》 None\nopen 1\nclosing 1\n4\n[1, 5]\n[1, 5, 0, 0]\n-\u003e《吴氏本草》\n4001050000 -\u003e《吴氏本草》 None\nopen 1\nclosing 1\n4\n[1, 6]\n[1, 6, 0, 0]\n-\u003e《唐本草》\n4001060000 -\u003e《唐本草》 None\nopen 1\nclosing 1\n4\n[1, 7]\n[1, 7, 0, 0]\n-\u003e《药总诀》\n4001070000 -\u003e《药总诀》 None\nopen 1\nclosing 1\n4\n[1, 8]\n[1, 8, 0, 0]\n-\u003e《药性本草》\n4001080000 -\u003e《药性本草》 None\nopen 1\nclosing 1\n4\n[1, 9]\n[1, 9, 0, 0]\n-\u003e《食疗本草》\n4001090000 -\u003e《食疗本草》 None\nopen 1\nclosing 1\n4\n[1, 10]\n[1, 10, 0, 0]\n-\u003e《本草拾遗》\n4001100000 -\u003e《本草拾遗》 None\nopen 1\nclosing 1\n4\n[1, 11]\n[1, 11, 0, 0]\n-\u003e《海药本草》\n4001110000 -\u003e《海药本草》 None\nopen 1\nclosing 1\n4\n[1, 12]\n[1, 12, 0, 0]\n-\u003e《删繁本草》\n4001120000 -\u003e《删繁本草》 None\nopen 1\nclosing 1\n4\n[1, 13]\n[1, 13, 0, 0]\n-\u003e《食性本草》\n4001130000 -\u003e《食性本草》 None\nopen 1\nclosing 1\n4\n[1, 14]\n[1, 14, 0, 0]\n-\u003e《蜀本草》\n4001140000 -\u003e《蜀本草》 None\nopen 1\nclosing 1\n4\n[1, 15]\n[1, 15, 0, 0]\n-\u003e《开宝本草》\n4001150000 -\u003e《开宝本草》 None\nopen 1\nclosing 1\n4\n[1, 16]\n[1, 16, 0, 0]\n-\u003e《嘉补注本草》\n4001160000 -\u003e《嘉补注本草》 None\nopen 1\nclosing 1\n4\n[1, 17]\n[1, 17, 0, 0]\n-\u003e《图经本草》\n4001170000 -\u003e《图经本草》 None\nopen 1\nclosing 1\n4\n[1, 18]\n[1, 18, 0, 0]\n-\u003e《证类本草》\n4001180000 -\u003e《证类本草》 None\nopen 1\nclosing 1\n4\n[1, 19]\n[1, 19, 0, 0]\n-\u003e《本草别说》\n4001190000 -\u003e《本草别说》 None\nopen 1\nclosing 1\n4\n[1, 20]\n[1, 20, 0, 0]\n-\u003e《日华诸家本草》\n4001200000 -\u003e《日华诸家本草》 None\nopen 1\nclosing 1\n4\n[1, 21]\n[1, 21, 0, 0]\n-\u003e《洁古珍珠囊》\n4001210000 -\u003e《洁古珍珠囊》 None\nopen 1\nclosing 1\n4\n[1, 22]\n[1, 22, 0, 0]\n-\u003e《日用本草》\n4001220000 -\u003e《日用本草》 None\nopen 1\nclosing 1\n4\n[1, 23]\n[1, 23, 0, 0]\n-\u003e《本草歌括》\n4001230000 -\u003e《本草歌括》 None\nopen 1\nclosing 1\n4\n[1, 24]\n[1, 24, 0, 0]\n-\u003e《本草衍义补遗》\n4001240000 -\u003e《本草衍义补遗》 None\nopen 1\nclosing 1\n4\n[1, 25]\n[1, 25, 0, 0]\n-\u003e《本草发挥》\n4001250000 -\u003e《本草发挥》 None\nopen 1\nclosing 1\n4\n[1, 26]\n[1, 26, 0, 0]\n-\u003e《救荒本草》\n4001260000 -\u003e《救荒本草》 None\nopen 1\nclosing 1\n4\n[1, 27]\n[1, 27, 0, 0]\n-\u003e《庚辛玉册》\n4001270000 -\u003e《庚辛玉册》 None\nopen 1\nclosing 1\n4\n[1, 28]\n[1, 28, 0, 0]\n-\u003e《本草集要》\n4001280000 -\u003e《本草集要》 None\nopen 1\nclosing 1\n4\n[1, 29]\n[1, 29, 0, 0]\n-\u003e《食物本草》\n4001290000 -\u003e《食物本草》 None\nopen 1\nclosing 1\n4\n[1, 30]\n[1, 30, 0, 0]\n-\u003e《食鉴本草》\n4001300000 -\u003e《食鉴本草》 None\nopen 1\nclosing 1\n4\n[1, 31]\n[1, 31, 0, 0]\n-\u003e《本草会编》\n4001310000 -\u003e《本草会编》 None\nopen 1\nclosing 1\n4\n[1, 32]\n[1, 32, 0, 0]\n-\u003e《本草纲目》\n4001320000 -\u003e《本草纲目》 None\nclosing 0\nopen 0\nopen 1\nclosing 1\n4\n[2, 1]\n[2, 1, 0, 0]\n-\u003e引据古今医家书目\n4002010000 -\u003e引据古今医家书目 None\nopen 1\nclosing 1\n4\n[2, 2]\n[2, 2, 0, 0]\n-\u003e引据古今经史百家书目\n4002020000 -\u003e引据古今经史百家书目 None\nopen 1\nclosing 1\n4\n[2, 3]\n[2, 3, 0, 0]\n-\u003e旧本所引者。\n4002030000 -\u003e旧本所引者。 None\nclosing 0\nopen 0\nclosing 0\nopen 0\nopen 1\nclosing 1\n4\n[4, 1]\n[4, 1, 0, 0]\n-\u003e上中下药\n4004010000 -\u003e上中下药 None\nopen 1\nclosing 1\n4\n[4, 2]\n[4, 2, 0, 0]\n-\u003eediting\n4004020000 -\u003eediting None\nopen 1\nclosing 1\n4\n[4, 3]\n[4, 3, 0, 0]\n-\u003e君臣佐使\n4004030000 -\u003e君臣佐使 None\nopen 1\nclosing 1\n4\n[4, 4]\n[4, 4, 0, 0]\n-\u003e气味\n4004040000 -\u003e气味 None\nopen 1\nclosing 1\n4\n[4, 5]\n[4, 5, 0, 0]\n-\u003e阴阳配合\n4004050000 -\u003e阴阳配合 None\nopen 1\nclosing 1\n4\n[4, 6]\n[4, 6, 0, 0]\n-\u003e根茎花实\n4004060000 -\u003e根茎花实 None\nopen 1\nclosing 1\n4\n[4, 7]\n[4, 7, 0, 0]\n-\u003e七情\n4004070000 -\u003e七情 None\nopen 1\nclosing 1\n4\n[4, 8]\n[4, 8, 0, 0]\n-\u003e五味四气\n4004080000 -\u003e五味四气 None\nopen 1\nclosing 1\n4\n[4, 9]\n[4, 9, 0, 0]\n-\u003e以毒治病\n4004090000 -\u003e以毒治病 None\nclosing 0\nopen 0\nopen 1\nclosing 1\n4\n[5, 1]\n[5, 1, 0, 0]\n-\u003e采造生熟\n4005010000 -\u003e采造生熟 None\nclosing 0\nopen 0\nopen 1\nclosing 1\n4\n[6, 1]\n[6, 1, 0, 0]\n-\u003e不治六失\n4006010000 -\u003e不治六失 None\nclosing 0\nopen 0\nopen 1\nclosing 1\n4\n[7, 1]\n[7, 1, 0, 0]\n-\u003evariety\n4007010000 -\u003evariety None\nclosing 0\nopen 0\nclosing 0\nopen 0\nclosing 0\nopen 0\nclosing 0\nopen 0\nopen 1\nclosing 1\n4\n[11, 1]\n[11, 1, 0, 0]\n-\u003e大方\n4011010000 -\u003e大方 None\nopen 1\nclosing 1\n4\n[11, 2]\n[11, 2, 0, 0]\n-\u003e小方\n4011020000 -\u003e小方 None\nopen 1\nclosing 1\n4\n[11, 3]\n[11, 3, 0, 0]\n-\u003e缓方\n4011030000 -\u003e缓方 None\nopen 1\nclosing 1\n4\n[11, 4]\n[11, 4, 0, 0]\n-\u003e急方\n4011040000 -\u003e急方 None\nopen 1\nclosing 1\n4\n[11, 5]\n[11, 5, 0, 0]\n-\u003e奇方\n4011050000 -\u003e奇方 None\nopen 1\nclosing 1\n4\n[11, 6]\n[11, 6, 0, 0]\n-\u003e偶方\n4011060000 -\u003e偶方 None\nopen 1\nclosing 1\n4\n[11, 7]\n[11, 7, 0, 0]\n-\u003e复方\n4011070000 -\u003e复方 None\nclosing 0\nopen 0\nopen 1\nclosing 1\n4\n[12, 1]\n[12, 1, 0, 0]\n-\u003e宣剂\n4012010000 -\u003e宣剂 None\nopen 1\nclosing 1\n4\n[12, 2]\n[12, 2, 0, 0]\n-\u003e通剂\n4012020000 -\u003e通剂 None\nopen 1\nclosing 1\n4\n[12, 3]\n[12, 3, 0, 0]\n-\u003e补剂\n4012030000 -\u003e补剂 None\nopen 1\nclosing 1\n4\n[12, 4]\n[12, 4, 0, 0]\n-\u003e泄剂\n4012040000 -\u003e泄剂 None\nopen 1\nclosing 1\n4\n[12, 5]\n[12, 5, 0, 0]\n-\u003e轻剂\n4012050000 -\u003e轻剂 None\nopen 1\nclosing 1\n4\n[12, 6]\n[12, 6, 0, 0]\n-\u003e重剂\n4012060000 -\u003e重剂 None\nopen 1\nclosing 1\n4\n[12, 7]\n[12, 7, 0, 0]\n-\u003e滑剂\n4012070000 -\u003e滑剂 None\nopen 1\nclosing 1\n4\n[12, 8]\n[12, 8, 0, 0]\n-\u003e涩剂\n4012080000 -\u003e涩剂 None\nopen 1\nclosing 1\n4\n[12, 9]\n[12, 9, 0, 0]\n-\u003e燥剂\n4012090000 -\u003e燥剂 None\nopen 1\nclosing 1\n4\n[12, 10]\n[12, 10, 0, 0]\n-\u003e湿剂\n4012100000 -\u003e湿剂 None\nclosing 0\nopen 0\nopen 1\nclosing 1\n4\n[13, 1]\n[13, 1, 0, 0]\n-\u003e故AAA\n4013010000 -\u003e故AAA None\nopen 1\nclosing 1\n4\n[13, 2]\n[13, 2, 0, 0]\n-\u003eBBB\n4013020000 -\u003eBBB None\nopen 1\nclosing 1\n4\n[13, 3]\n[13, 3, 0, 0]\n-\u003eCCC\n4013030000 -\u003eCCC None\nopen 1\nclosing 1\n4\n[13, 4]\n[13, 4, 0, 0]\n-\u003eexamples\n4013040000 -\u003eexamples None\nclosing 0\nopen 0\nopen 1\nclosing 1\n4\n[14, 1]\n[14, 1, 0, 0]\n-\u003e五味宜忌\n4014010000 -\u003e五味宜忌 None\nopen 1\nclosing 1\n4\n[14, 2]\n[14, 2, 0, 0]\n-\u003e五欲\n4014020000 -\u003e五欲 hyposseis:taste and the preference\nopen 1\nclosing 1\n4\n[14, 3]\n[14, 3, 0, 0]\n-\u003e五宜\n4014030000 -\u003e五宜 hpothesis:color, taste, good-for\nopen 1\nclosing 1\n4\n[14, 4]\n[14, 4, 0, 0]\n-\u003e五禁\n4014040000 -\u003e五禁 hypothesis:illness and the fobiden\nopen 1\nclosing 1\n4\n[14, 5]\n[14, 5, 0, 0]\n-\u003eseasons\n4014050000 -\u003eseasons hypothesis:season and nurturing\nopen 1\nclosing 1\n4\n[14, 6]\n[14, 6, 0, 0]\n-\u003exxx\n4014060000 -\u003exxx None\nopen 1\nclosing 1\n4\n[14, 7]\n[14, 7, 0, 0]\n-\u003e五走\n4014070000 -\u003e五走 hypothesis:illness and the fobiden\nopen 1\nclosing 1\n4\n[14, 8]\n[14, 8, 0, 0]\n-\u003e五伤\n4014080000 -\u003e五伤 hypothesis:excess and the harm\nopen 1\nclosing 1\n4\n[14, 9]\n[14, 9, 0, 0]\n-\u003e五过\n4014090000 -\u003e五过 hypothesis:excess and the harm\nopen 1\nclosing 1\n4\n[14, 10]\n[14, 10, 0, 0]\n-\u003e五味偏胜\n4014100000 -\u003e五味偏胜 tag:hypothesis\nopen 1\nclosing 1\n4\n[14, 11]\n[14, 11, 0, 0]\n-\u003e标本阴阳\n4014110000 -\u003e标本阴阳 tag:theory\nopen 1\nclosing 1\n4\n[14, 12]\n[14, 12, 0, 0]\n-\u003e升降浮沉\n4014120000 -\u003e升降浮沉 None\nopen 1\nclosing 1\n4\n[14, 13]\n[14, 13, 0, 0]\n-\u003e顺时气而养天和\n4014130000 -\u003e顺时气而养天和 None\nopen 1\nclosing 1\n4\n[14, 14]\n[14, 14, 0, 0]\n-\u003e五运六淫用药式\n4014140000 -\u003e五运六淫用药式 tag:[五运, 六淫]\nopen 1\nclosing 1\n4\n[14, 15]\n[14, 15, 0, 0]\n-\u003e五气补泻\n4014150000 -\u003e五气补泻 None\nopen 1\nclosing 1\n4\n[14, 16]\n[14, 16, 0, 0]\n-\u003e五味补泻\n4014160000 -\u003e五味补泻 None\nclosing 0\nopen 0\nopen 1\nclosing 1\n4\n[15, 1]\n[15, 1, 0, 0]\n-\u003e肝\n4015010000 -\u003e肝 tag:脏腑虚实标本\nopen 1\nclosing 1\n4\n[15, 2]\n[15, 2, 0, 0]\n-\u003e心\n4015020000 -\u003e心 tag:脏腑虚实标本\nopen 1\nclosing 1\n4\n[15, 3]\n[15, 3, 0, 0]\n-\u003e脾\n4015030000 -\u003e脾 tag:脏腑虚实标本\nopen 1\nclosing 1\n4\n[15, 4]\n[15, 4, 0, 0]\n-\u003e肺\n4015040000 -\u003e肺 tag:脏腑虚实标本\nopen 1\nclosing 1\n4\n[15, 5]\n[15, 5, 0, 0]\n-\u003e肾\n4015050000 -\u003e肾 tag:脏腑虚实标本\nopen 1\nclosing 1\n4\n[15, 6]\n[15, 6, 0, 0]\n-\u003e命门\n4015060000 -\u003e命门 tag:脏腑虚实标本\nopen 1\nclosing 1\n4\n[15, 7]\n[15, 7, 0, 0]\n-\u003e三焦\n4015070000 -\u003e三焦 tag:脏腑虚实标本\nopen 1\nclosing 1\n4\n[15, 8]\n[15, 8, 0, 0]\n-\u003e胆\n4015080000 -\u003e胆 tag:脏腑虚实标本\nopen 1\nclosing 1\n4\n[15, 9]\n[15, 9, 0, 0]\n-\u003e胃\n4015090000 -\u003e胃 tag:脏腑虚实标本\nopen 1\nclosing 1\n4\n[15, 10]\n[15, 10, 0, 0]\n-\u003e大肠\n4015100000 -\u003e大肠 tag:脏腑虚实标本\nopen 1\nclosing 1\n4\n[15, 11]\n[15, 11, 0, 0]\n-\u003e小肠\n4015110000 -\u003e小肠 tag:脏腑虚实标本\nopen 1\nclosing 1\n4\n[15, 12]\n[15, 12, 0, 0]\n-\u003e膀胱\n4015120000 -\u003e膀胱 tag:脏腑虚实标本\nclosing 0\nopen 0\nopen 1\nclosing 1\n4\n[16, 1]\n[16, 1, 0, 0]\n-\u003e12 jing\n4016010000 -\u003e12 jing None\nclosing 0\n***completed level:  1\n2\n[{\"title\": \"\", \"sequence\": 0, \"meta\": null, \"isOpen\": false}, {\"title\": \"\", \"sequence\": 0, \"meta\": null, \"isOpen\": false}, {\"title\": \"\", \"sequence\": 0, \"meta\": null, \"isOpen\": false}]\nopen 0\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nclosing 0\nopen 0\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nclosing 0\nopen 0\nclosing 0\nopen 0\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nclosing 0\nopen 0\nopen 1\nclosing 1\nclosing 0\nopen 0\nopen 1\nclosing 1\nclosing 0\nopen 0\nopen 1\nclosing 1\nclosing 0\nopen 0\nclosing 0\nopen 0\nclosing 0\nopen 0\nclosing 0\nopen 0\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nclosing 0\nopen 0\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nclosing 0\nopen 0\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nclosing 0\nopen 0\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nclosing 0\nopen 0\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nclosing 0\nopen 0\nopen 1\nclosing 1\nclosing 0\n***completed level:  2\n3\n[{\"title\": \"\", \"sequence\": 0, \"meta\": null, \"isOpen\": false}, {\"title\": \"\", \"sequence\": 0, \"meta\": null, \"isOpen\": false}, {\"title\": \"\", \"sequence\": 0, \"meta\": null, \"isOpen\": false}, {\"title\": \"\", \"sequence\": 0, \"meta\": null, \"isOpen\": false}]\nopen 0\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nclosing 0\nopen 0\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nclosing 0\nopen 0\nclosing 0\nopen 0\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nclosing 0\nopen 0\nopen 1\nclosing 1\nclosing 0\nopen 0\nopen 1\nclosing 1\nclosing 0\nopen 0\nopen 1\nclosing 1\nclosing 0\nopen 0\nclosing 0\nopen 0\nclosing 0\nopen 0\nclosing 0\nopen 0\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nclosing 0\nopen 0\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nclosing 0\nopen 0\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nclosing 0\nopen 0\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nclosing 0\nopen 0\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nopen 1\nclosing 1\nclosing 0\nopen 0\nopen 1\nclosing 1\nclosing 0\n***completed level:  3\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1618699928621_192107703",
      "id": "paragraph_1618699928621_192107703",
      "dateCreated": "2021-04-17 15:52:08.622",
      "dateStarted": "2021-05-02 21:30:08.187",
      "dateFinished": "2021-05-02 21:30:10.098",
      "status": "FINISHED"
    },
    {
      "title": "xd (\u003cd...d\u003e)",
      "text": "\nimport codecs\nimport re\n#import psycopg2\n\nimport random\nimport string\nimport json\n\n\n# extract chapter title and tag if there is one \ndef parseTitleAndMeta(pattern, str):\n    #print(pattern)\n    #print(str)\n    temp \u003d re.match(pattern+\u0027(.*?)\u003c(.*)\u003e$\u0027, str)\n    if temp:\n        tl \u003d temp.group(1).strip()\n        tg \u003d temp.group(2).strip()\n        return (tl, tg)\n    \n    temp \u003d re.match(pattern+\u0027(.*?)$\u0027, str)\n    if temp:\n        tl \u003d re.sub(r\"\\s+\", \"\", temp.group(1))\n        return (tl, None)\n    return None        \n\n# a random string to make infobot ID more likely to be unique.    \ndef gen_random_string(length):\n    letters \u003d string.ascii_lowercase\n    result_str \u003d \u0027\u0027.join(random.choice(letters) for i in range(length))\n    return result_str\n\n\n#iFile \u003d z.input(\"iFile\")\niFile \u003d z.get(\"fileName\")\nins \u003d codecs.open(iFile, \"r\", encoding\u003d\"utf8\")\n\nvInclude \u003d False\n\nvChpNum \u003d getChpNum(iFile)\n#vId \u003d None\n#vParentId \u003d None\nvVer \u003d 0\nvVNum \u003d 0\nvTitleNTagD \u003d (\u0027\u0027, \u0027\u0027)\nvContent \u003d \"\"\n#vSource \u003d u\"《本草纲目》\"\noFileName \u003d \"\"\n\nemptyLnCnt \u003d 0\n\nfor line in ins:\n    #print(vSkip)\n    #skip the lines between \u003cx and x\u003e\n    if ( re.match(\u0027^d\u003e\u0027, line) ):\n        #title \u003d vSource + \"_\" + vTitleNTagD[0] \n        title \u003d vTitleNTagD[0] \n        #id \u003d vSource + \"_\" + vChpNum + \"_\" +  format(vVNum, \u002703\u0027) + \"_\"  \\\n        #    + gen_random_string(3)\n        seq \u003d genSeq(int(vChpNum), vVNum )\n        print(seq)\n        tg \u003d vTitleNTagD[1]\n        print(title)\n        #print(id)\n        print(tg)\n        print(vContent)\n        #cur.execute(sql, (vVNum, title, vSource, tg, vVer, vContent))\n        meta\u003dNone\n        if tg:\n            tg \u003d re.sub(\u0027^|$\u0027, \u0027\"\u0027, tg)\n            tg \u003d re.sub(\u0027([:,])\u0027, r\u0027\"\\1\"\u0027, tg)\n            print(tg)\n            #meta \u003d json.loads(\u0027{\u0027 + tg + \u0027}\u0027);\n            meta \u003d \u0027{\u0027 + tg + \u0027}\u0027;\n        print(meta)\n        saveDB(seq, title, meta, vContent)\n\n        vInclude \u003d False\n        vContent \u003d \"\"\n        continue\n    \n    if ( re.match(\u0027^\u003cd\u0027, line) ):\n        vVNum +\u003d 1\n        vInclude \u003d True\n        #oFileName \u003d \"03\" + \"_\" + str(chpNum).zfill(3) + \".txt\"\n        vTitleNTagD \u003d parseTitleAndMeta(\u0027^\u003cd\u0027, line)\n        continue\n    if ( re.match(\u0027^d\u003e\u0027, line) ):\n        vInclude \u003d False\n        continue\n\n    # anything belongs the lower level blocks are not to be included here.\n    if ( re.match(\u0027^\u003cb[012]\u0027, line) ): \n        vInclude \u003d False\n        continue\n    if ( re.match(\u0027^b[01]\u003e\u0027, line) ): \n        vInclude \u003d True\n        continue\n\n    if ( vInclude ):\n        if(re.match(\u0027^$\u0027, line)):\n            emptyLnCnt +\u003d 1\n        else:\n            emptyLnCnt \u003d 0\n        if (emptyLnCnt \u003e 2):\n            continue\n        \n        vContent \u003d vContent + line\n\n#conn.commit()\n#cur.close()\n#conn.close()",
      "user": "anonymous",
      "dateUpdated": "2021-04-21 10:06:22.998",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": false,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true
        },
        "editorMode": "ace/mode/python",
        "title": true,
        "lineNumbers": false,
        "editorHide": true,
        "tableHide": true
      },
      "settings": {
        "params": {
          "iFile": "/home/celine/SHARED/LinuxWS/ZhongYi/bencaoganmu/Data/viEdited/02prefix_2.txt"
        },
        "forms": {}
      },
      "results": {
        "code": "ERROR",
        "msg": [
          {
            "type": "TEXT",
            "data": "Unexpected exception: java.lang.RuntimeException: java.lang.InterruptedException: sleep interrupted\n\tat org.apache.zeppelin.notebook.Paragraph.execute(Paragraph.java:353)\n\tat org.apache.zeppelin.notebook.Note.run(Note.java:857)\n\tat org.apache.zeppelin.service.NotebookService.runParagraph(NotebookService.java:356)\n\tat org.apache.zeppelin.service.NotebookService.runAllParagraphs(NotebookService.java:412)\n\tat org.apache.zeppelin.socket.NotebookServer.runAllParagraphs(NotebookServer.java:1486)\n\tat org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:357)\n\tat org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:58)\n\tat org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:231)\n\tat org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)\n\tat org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)\n\tat org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:179)\n\tat org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:150)\n\tat org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:322)\n\tat org.eclipse.jetty.websocket.common.extensions.AbstractExtension.nextIncomingFrame(AbstractExtension.java:147)\n\tat org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.nextIncomingFrame(PerMessageDeflateExtension.java:112)\n\tat org.eclipse.jetty.websocket.common.extensions.compress.CompressExtension.forwardIncoming(CompressExtension.java:168)\n\tat org.eclipse.jetty.websocket.common.extensions.compress.PerMessageDeflateExtension.incomingFrame(PerMessageDeflateExtension.java:92)\n\tat org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:202)\n\tat org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:225)\n\tat org.eclipse.jetty.websocket.common.Parser.parseSingleFrame(Parser.java:259)\n\tat org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:460)\n\tat org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:441)\n\tat org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:311)\n\tat org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:103)\n\tat org.eclipse.jetty.io.ChannelEndPoint$2.run(ChannelEndPoint.java:117)\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:806)\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:938)\n\tat java.base/java.lang.Thread.run(Thread.java:834)\nCaused by: java.lang.InterruptedException: sleep interrupted\n\tat java.base/java.lang.Thread.sleep(Native Method)\n\tat org.apache.zeppelin.notebook.Paragraph.execute(Paragraph.java:351)\n\t... 27 more\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1603145541708_145726727",
      "id": "paragraph_1603145541708_145726727",
      "dateCreated": "2020-10-19 15:12:21.708",
      "dateStarted": "2021-04-16 21:06:19.993",
      "dateFinished": "2021-04-16 21:06:20.640",
      "status": "ERROR"
    },
    {
      "title": "xb[01] (\u003cbn ... nb\u003e)",
      "text": "import codecs\nimport re\nimport psycopg2\n\nimport random\nimport string\n\n## extrac chapter number from file name, which is to be used in the infobot name\n#def getChpNum(fileName):\n#    nParts \u003d fileName.rsplit(\u0027/\u0027,1)\n#    chpN \u003d nParts[1]\n#    return chpN[:2]\n a random string to make infobot ID more likely to be unique.    \ndef gen_random_string(length):\n    letters \u003d string.ascii_lowercase\n    result_str \u003d \u0027\u0027.join(random.choice(letters) for i in range(length))\n    return result_str\n\n# extract chapter title and tag if there is one \n#def parseTitleAndTag(pattern, str):\n#    #print(pattern)\n#    #print(str)\n#    temp \u003d re.match(pattern+\u0027(.*?)tag:(.*)$\u0027, str)\n#    #print(temp)\n#    if temp:\n#        tl \u003d temp.group(1).strip()\n#        tg \u003d temp.group(2).strip()\n#        #print(tl, tg)\n#        return (tl, tg)\n#    \n#    temp \u003d re.match(pattern+\u0027(.*?)$\u0027, str)\n#    if temp:\n#        tl \u003d re.sub(r\"\\s+\", \"\", temp.group(1))\n#        return (tl, None)\n#\n#    return None        \n    \n\n# infobots are to be stored in a database, to be furtuer parsed into finer infobot    \n#conn \u003d psycopg2.connect(database\u003d\"notes\", user\u003d\"postgres\", password\u003d\"post\", host\u003d\"127.0.0.1\", port\u003d\"5432\")\n#print(\"Database opened successfully\")\n#cur \u003d conn.cursor()\n#sql \u003d \"\"\"INSERT INTO infobot(id, title, source, tags, version, content)\n#        VALUES(%s, %s, %s, %s, %s, %s) ;\"\"\"\n\n\n#iFile \u003d z.input(\"iFile\")\niFile \u003d z.get(\"fileName\")\nins \u003d codecs.open(iFile, \"r\", encoding\u003d\"utf8\")\n\nvInclude \u003d False\n\nvChpNum \u003d getChpNum(iFile)\n#vId \u003d None\n#vParentId \u003d None\nvVer \u003d 0\nvVNum \u003d 0\nvBNum \u003d 0\nvTitleNTagD \u003d (\u0027\u0027, \u0027\u0027)\nvTitleNTagB \u003d (\u0027\u0027, \u0027\u0027)\nvContent \u003d \"\"\nvSource \u003d u\"《本草纲目》\"\noFileName \u003d \"\"\n\nemptyLnCnt \u003d 0\n\nfor line in ins:\n    #print(vSkip)\n    #skip the lines between \u003cx and x\u003e\n    if ( re.match(\u0027^d\u003e\u0027, line) ):\n        vInclude \u003d False\n        vBNum \u003d 0   #reset block number\n        continue\n    \n    if ( re.match(\u0027^\u003cd\u0027, line) ):\n        vVNum +\u003d 1\n        vTitleNTagD \u003d parseTitleAndTag(\u0027^\u003cd\u0027, line)\n        continue\n\n    # b2 blocks are excluded here.\n    if ( re.match(\u0027^\u003cb2\u0027, line) ):\n        vInclude \u003d False\n        continue\n    if ( re.match(\u0027^b2\u003e\u0027, line) ): \n        vInclude \u003d True\n        continue\n\n\n    # extract b0 or b1\n    if ( re.match(\u0027^\u003cb[01]\u0027, line) ): \n        vInclude \u003d True\n        vBNum +\u003d 1\n        vTitleNTagB \u003d parseTitleAndTag(\u0027^\u003cb[01]\u0027, line)\n        continue\n    if ( re.match(\u0027^b[01]\u003e\u0027, line) ): \n        title \u003d vSource + \"_\" + vTitleNTagD[0] + \"_\" + vTitleNTagB[0] \n        id \u003d vSource + \"_\" + vChpNum + \"_\" +  format(vVNum, \u002703\u0027) + \"_\"  \\\n            +  format(vBNum, \u002703\u0027) + \"_\" + gen_random_string(3)\n        tg \u003d vTitleNTagB[1]\n        print(title)\n        print(id)\n        print(tg)\n        print(vContent)\n        #cur.execute(sql, (id, title, vSource, tg, vVer, vContent))\n        saveDB(seq, title, meta, vContent)\n        \n        vInclude \u003d False\n        vContent \u003d \"\"\n        continue\n    \n    if ( vInclude ):\n        if(re.match(\u0027^$\u0027, line)):\n            emptyLnCnt +\u003d 1\n        else:\n            emptyLnCnt \u003d 0\n        if (emptyLnCnt \u003e 2):\n            continue\n        vContent \u003d vContent + line\n\n#conn.commit()\n#cur.close()\n#conn.close()",
      "user": "anonymous",
      "dateUpdated": "2021-04-21 09:57:00.267",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": false,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true
        },
        "editorMode": "ace/mode/python",
        "title": true,
        "lineNumbers": true,
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {
          "iFile": "/home/celine/SHARED/LinuxWS/ZhongYi/bencaoganmu/Data/viEdited/02prefix_2.txt"
        },
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1603150517284_939972994",
      "id": "paragraph_1603150517284_939972994",
      "dateCreated": "2020-10-19 16:35:17.284",
      "dateStarted": "2021-04-16 21:06:46.337",
      "dateFinished": "2021-04-16 21:06:47.311",
      "status": "FINISHED"
    },
    {
      "title": "xb2 ",
      "text": "import codecs\nimport re\nimport psycopg2\n\nimport random\nimport string\n\n# extrac chapter number from file name, which is to be used in the infobot name\ndef getChpNum(fileName):\n    nParts \u003d fileName.rsplit(\u0027/\u0027,1)\n    chpN \u003d nParts[1]\n    return chpN[:2]\n# a random string to make infobot ID more likely to be unique.    \ndef gen_random_string(length):\n    letters \u003d string.ascii_lowercase\n    result_str \u003d \u0027\u0027.join(random.choice(letters) for i in range(length))\n    return result_str\n\n## extract chapter title and tag if there is one \n#def parseTitleAndTag(pattern, str):\n#    #print(pattern)\n#    #print(str)\n#    temp \u003d re.match(pattern+\u0027(.*?)tag:(.*)$\u0027, str)\n#    #print(temp)\n#    if temp:\n#        tl \u003d temp.group(1).strip()\n#        tg \u003d temp.group(2).strip()\n#        #print(tl, tg)\n#        return (tl, tg)\n#    \n#    temp \u003d re.match(pattern+\u0027(.*?)$\u0027, str)\n#    if temp:\n#        tl \u003d re.sub(r\"\\s+\", \"\", temp.group(1))\n#        return (tl, None)\n#\n#    return None        \n\n# infobots are to be stored in a database, to be furtuer parsed into finer infobot    \nconn \u003d psycopg2.connect(database\u003d\"notes\", user\u003d\"postgres\", password\u003d\"post\", host\u003d\"127.0.0.1\", port\u003d\"5432\")\n#print(\"Database opened successfully\")\ncur \u003d conn.cursor()\nsql \u003d \"\"\"INSERT INTO infobot(id, title, source, tags, version, content)\n        VALUES(%s, %s, %s, %s, %s, %s) ;\"\"\"\n\n\n#iFile \u003d z.input(\"iFile\")\niFile \u003d z.get(\"fileName\")\nins \u003d codecs.open(iFile, \"r\", encoding\u003d\"utf8\")\n\nvInclude \u003d False\n\nvChpNum \u003d getChpNum(iFile)\n#vId \u003d None\n#vParentId \u003d None\nvVer \u003d 0\nvVNum \u003d 0\nvBNum \u003d 0\nvB2Num \u003d 0\nvTitleNTagD \u003d (\u0027\u0027,\u0027\u0027)\nvTitleNTagB  \u003d (\u0027\u0027,\u0027\u0027)\nvTitleNTagB2  \u003d (\u0027\u0027,\u0027\u0027)\nvContent \u003d \"\"\nvSource \u003d u\"《本草纲目》\"\noFileName \u003d \"\"\n\nemptyLnCnt \u003d 0\n\nfor line in ins:\n    #print(vSkip)\n    #skip the lines between \u003cx and x\u003e\n    if ( re.match(\u0027^d\u003e\u0027, line) ):\n        vInclude \u003d False\n        vBNum \u003d 0   #reset block number\n        continue\n    \n    if ( re.match(\u0027^\u003cd\u0027, line) ):\n        vVNum +\u003d 1\n        #oFileName \u003d \"03\" + \"_\" + str(chpNum).zfill(3) + \".txt\"\n        vTitleNTagD \u003d parseTitleAndTag(\u0027^\u003cd\u0027, line)\n        continue\n\n    # anything belongs the lower level blocks are not to be included here.\n    if ( re.match(\u0027^\u003cb[01]\u0027, line) ): \n        vInclude \u003d False\n        vBNum +\u003d 1\n        vTitleNTagB \u003d parseTitleAndTag(\u0027^\u003cb[01]\u0027, line)\n        continue\n    if ( re.match(\u0027^b[01]\u003e\u0027, line) ): \n        vB2Num \u003d 0   #reset child level block number\n        continue\n\n    # anything belongs to \u003cb2 ... b2\u003e blocks are not to be included here.\n    if ( re.match(\u0027^\u003cb2\u0027, line) ): \n        vInclude \u003d True\n        vB2Num +\u003d 1\n        vTitleNTagB2 \u003d parseTitleAndTag(\u0027^\u003cb2\u0027, line)\n        continue\n    if ( re.match(\u0027^b2\u003e\u0027, line) ): \n        title \u003d vSource + \"_\" + vTitleNTagD[0] + \"_\" + vTitleNTagB[0] + \"_\" + vTitleNTagB2[0] \n        id \u003d vSource + \"_\" + vChpNum \\\n            + \"_\" +  format(vVNum, \u002703\u0027)  \\\n            + \"_\" + format(vBNum, \u002703\u0027)   \\\n            + \"_\" + format(vB2Num, \u002703\u0027) + \"_\" + gen_random_string(3)\n        tg \u003d vTitleNTagB2[1]\n        print(title)\n        print(id)\n        print(tg)\n        print(vContent)\n        cur.execute(sql, (id, title, vSource, tg, vVer, vContent))\n\n        vInclude \u003d False\n        vContent \u003d \"\"\n        continue\n\n    \n    if ( vInclude ):\n        if(re.match(\u0027^$\u0027, line)):\n            emptyLnCnt +\u003d 1\n        else:\n            emptyLnCnt \u003d 0\n        if (emptyLnCnt \u003e 2):\n            continue\n        vContent \u003d vContent + line\n\nconn.commit()\ncur.close()\nconn.close()",
      "user": "anonymous",
      "dateUpdated": "2021-04-20 12:14:59.976",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": false,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true
        },
        "editorMode": "ace/mode/python",
        "lineNumbers": true,
        "title": true,
        "editorHide": true,
        "tableHide": true
      },
      "settings": {
        "params": {
          "iFile": "/home/celine/SHARED/LinuxWS/ZhongYi/bencaoganmu/Data/viEdited/02prefix_2.txt"
        },
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1603163681826_1071893464",
      "id": "paragraph_1603163681826_1071893464",
      "dateCreated": "2020-10-19 20:14:41.826",
      "dateStarted": "2021-04-15 20:17:15.664",
      "dateFinished": "2021-04-15 20:17:15.778",
      "status": "FINISHED"
    }
  ],
  "name": "splitBCGM",
  "id": "2FKNG5PMR",
  "defaultInterpreterGroup": "python",
  "version": "0.9.0-preview2",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {},
  "config": {
    "isZeppelinNotebookCronEnable": false
  },
  "info": {}
}