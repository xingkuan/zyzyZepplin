{
  "paragraphs": [
    {
      "title": "create info_src record",
      "text": "import codecs\nimport re\nimport psycopg2\n\n# infobots are to be stored in a database, to be furtuer parsed into finer infobot    \nconn \u003d psycopg2.connect(database\u003d\"infostg\", user\u003d\"postgres\", password\u003d\"post\", host\u003d\"127.0.0.1\", port\u003d\"5432\")\n#print(\"Database opened successfully\")\ncur \u003d conn.cursor()\nsql \u003d \"\"\"INSERT INTO info_src(id, name, meta)\n        VALUES(2, \u0027http://www.a-hospital.com/w/中药图典\u0027, \u0027{\"status\":\"seems not in service as of 2021.05.06\"}\u0027) ;\"\"\"\n\ncur.execute(sql)\n\nconn.commit()\ncur.close()\nconn.close()",
      "user": "anonymous",
      "dateUpdated": "2021-05-06 18:17:00.441",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true
        },
        "editorMode": "ace/mode/python",
        "lineNumbers": true,
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1620350101494_747053403",
      "id": "paragraph_1620350101494_747053403",
      "dateCreated": "2021-05-06 18:15:01.494",
      "dateStarted": "2021-05-06 18:17:00.454",
      "dateFinished": "2021-05-06 18:17:00.528",
      "status": "FINISHED"
    },
    {
      "title": "functions",
      "text": "import psycopg2\n\n# extrac chapter number from file name, which is to be used in the infobot name\ndef getChpNum(fileName):\n    nParts \u003d fileName.rsplit(\u0027/\u0027,1)    #eg. data100.json\n    #print(nParts)\n    chpN \u003d nParts[1]    #eg: 02intro_1.txt\n    chpN\u003dchpN.rsplit(\u0027.\u0027)[0]\n    return int(chpN[-3:])        #  int(\u0027100\u0027) \u003d\u003d\u003e100\n\n#For本草纲目,divide the info into 4 layers, and the id is constructed as\n#  chNum*1000000 + divNum*10000 + bNum*100 + b2Num\ndef genSeq(chNum, seq):\n    return chNum*1000 + seq\n\ndef saveDB(seq, name, meta, content):\n    sql \u003d \"\"\"INSERT INTO info_stg(src_id, seq, name, meta, version, content)\n        VALUES(2, %s, %s, %s, 0, %s) ;\"\"\"\n    conn \u003d psycopg2.connect(database\u003d\"infostg\", user\u003d\"postgres\", password\u003d\"post\", host\u003d\"127.0.0.1\", port\u003d\"5432\")\n    cur \u003d conn.cursor()\n    cur.execute(sql, (seq, name, meta, content))\n    conn.commit()\n    cur.close()\n    conn.close()",
      "user": "anonymous",
      "dateUpdated": "2021-05-11 09:48:57.678",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true
        },
        "editorMode": "ace/mode/python",
        "title": true,
        "lineNumbers": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1620350279997_1196040992",
      "id": "paragraph_1620350279997_1196040992",
      "dateCreated": "2021-05-06 18:17:59.997",
      "dateStarted": "2021-05-11 09:48:57.702",
      "dateFinished": "2021-05-11 09:49:02.906",
      "status": "FINISHED"
    },
    {
      "title": "split中药图典",
      "text": "import json\nimport codecs\nfrom functools import reduce\nimport re\n\nfName\u003d\u0027/home/celine/SHARED/LinuxWS/ZhongYi/www_taozhy_com/data/data500.json\u0027\nfNum\u003dgetChpNum(fName)\n\nwith open(fName, encoding\u003d\"utf8\") as fh: \n    data \u003d json.load(fh)\n\nseq\u003d0\nfor i in data:\n    name\u003di[\u0027name_cn\u0027]\n    print(fNum, seq, name)\n\n    # about\n    imgs\u003dreduce(lambda a, b: a + \", \" + b if a else b, i[\u0027images\u0027], \u0027\u0027)   #so the 1st character is not \",\"\n    imgs\u003d\u0027[\u0027+imgs+\u0027]\u0027\n    #print(imgs)\n    #some meta data. Should be JSON, but edited/stored as simple structure like name:value,name:value ... \n    meta\u003d\"pingyin:\"+i[\u0027name_py\u0027]+\",imgs:\"+imgs\n    #print(meta)\n\n    #structured data, but need to be in the body. \n    properties\u003d\u0027nspecs1:\u0027+i[\u0027specs1\u0027]  #TODO: parse into qi, wei, afiliation\n    properties\u003dproperties+\u0027,\\neffect:\u0027+i[\u0027effect\u0027]+\u0027,\\nusage:\u0027+i[\u0027usage\u0027] + \u0027,\\nwarn1:\u0027+i[\u0027warn1\u0027] + \u0027,\\nwarn2:\u0027+i[\u0027warn2\u0027] \n    properties\u003dproperties+\u0027\\nuseFor:\u0027+ reduce(lambda a, b: a + \", \" + b, i[\u0027tags\u0027])        #str(i[\u0027tags\u0027])\n    \n    xxx\u003d\u0027【特性】:\\n\u0027+properties\n    #print(xxx)\n    # medical use\n\n\n    desc\u003di[\u0027desc\u0027]\n    desc\u003d\u0027【desc】:\\n\u0027+i[\u0027desc\u0027]\n    #print(desc)\n\n    apps1\u003di[\u0027apps1\u0027]\n    #print(apps1)\n    #apps1\u003dre.sub(\u0027(\\d．.*?。)\u0027, r\u0027\\n\\1\\n\u0027, apps1)   # seems can\u0027t vi them into mulitple line,\n    #                                                # that would be invalid Json string.\n    apps1\u003dre.sub(\u0027。       \u0027, \u0027: \\n\u0027, apps1)\n    apps\u003d\u0027【apps1】:\\n\u0027+apps1\n    #print(apps)\n\n    # traditional description\n    traditional\u003dre.sub(\u0027(\\d*?．.*?：)\u0027, r\u0027\\n\\1\u0027, i[\u0027ref_tra\u0027])\n\n    traditional\u003dre.sub(\u0027[“”]\u0027, \u0027\u0027, traditional)     # remove  “ and ”  \n    traditional\u003d\u0027【传统描述】:\u0027+ traditional\n    #print(traditional)\n    \n    # modern medicine\n    modern\u003dre.sub(\u0027(\\d*?．.*?：)\u0027, r\u0027\\n\\1\u0027, i[\u0027ref_mod\u0027])\n    modern\u003d\u0027【现代分析】:\u0027+ modern   \n    #print(modern)\n    \n    id\u003dgenSeq(fNum, seq)\n    saveDB(id, name, meta, xxx+\u0027\\n\u0027+desc+\u0027\\n\u0027+apps+\u0027\\n\u0027+traditional+\u0027\\n\u0027+modern)\n    \n    seq +\u003d1",
      "user": "anonymous",
      "dateUpdated": "2021-05-11 09:51:42.070",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true
        },
        "editorMode": "ace/mode/python",
        "title": true,
        "lineNumbers": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "500 0 麻黄根\n500 1 浮小麦\n500 2 糯稻根须\n500 3 五味子\n500 4 乌梅\n500 5 五倍子\n500 6 罂粟壳\n500 7 诃子\n500 8 石榴皮\n500 9 肉豆蔻\n500 10 赤石脂\n500 11 禹余粮\n500 12 山茱萸\n500 13 覆盆子\n500 14 桑螵蛸\n500 15 金樱子\n500 16 海螵蛸\n500 17 莲子\n500 18 芡实\n500 19 刺猬皮\n500 20 椿皮\n500 21 鸡冠花\n500 22 常山\n500 23 瓜蒂\n500 24 胆矾\n500 25 雄黄\n500 26 硫黄\n500 27 白矾\n500 28 蛇床子\n500 29 蟾酥\n500 30 樟脑\n500 31 木鳖子\n500 32 土荆皮\n500 33 蜂房\n500 34 大蒜\n500 35 升药\n500 36 轻粉\n500 37 砒石\n500 38 铅丹\n500 39 炉甘石\n500 40 硼砂\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1620275811816_671453694",
      "id": "paragraph_1620275811816_671453694",
      "dateCreated": "2021-05-05 21:36:51.816",
      "dateStarted": "2021-05-11 09:51:42.074",
      "dateFinished": "2021-05-11 09:51:42.575",
      "status": "FINISHED"
    },
    {
      "text": "from functools import reduce\n\nitems \u003d [1, 2, 3, 4, 5]\nsquared \u003d list(map(lambda x: x**2, items))\nfor i in squared:\n    print(i)\n    \nresult \u003d reduce(lambda a, b: a + b, squared)    \nprint(result)\n\nnames\u003d[\"aaa\", \"bbb\", \"ccc\"]    \nresult \u003d reduce(lambda a, b: a + \" \" + b, names)    \nprint(result)\n\nre.split(r\u0027临床研究：\u0027, r\u0027生物作用。       3．临床研究：①以麻黄附子细辛汤加味治疗风寒侵袭头部，经脉郁滞, 又兼少阴阳虚，入冬屡患偏头痛者\u003e，效果良好（中国民间疗法，2000，8(11):28）。②用麻黄6g，桂枝12g以及杏仁、甘\"\u0027)",
      "user": "anonymous",
      "dateUpdated": "2021-05-10 17:27:15.357",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true
        },
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "1\n4\n9\n16\n25\n55\naaa bbb ccc\n[\u0027生物作用。\\xa0\\xa0\\xa0\\xa0\\xa0\\xa0\\xa03．\u0027, \u0027①以麻黄附子细辛汤加味治疗风寒侵袭头部，经脉郁滞, 又兼少阴阳虚，入冬屡患偏头痛者\u003e，效果良好（中国民间疗法，2000，8(11):28）。②用麻黄6g，桂枝12g以及杏仁、甘\"\u0027]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1620275942921_1118669441",
      "id": "paragraph_1620275942921_1118669441",
      "dateCreated": "2021-05-05 21:39:02.921",
      "dateStarted": "2021-05-10 17:27:15.368",
      "dateFinished": "2021-05-10 17:27:15.400",
      "status": "FINISHED"
    },
    {
      "user": "anonymous",
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1620422729495_1313489605",
      "id": "paragraph_1620422729495_1313489605",
      "dateCreated": "2021-05-07 14:25:29.496",
      "status": "READY"
    }
  ],
  "name": "splitTaozhi_com",
  "id": "2G7EXFZVQ",
  "defaultInterpreterGroup": "python",
  "version": "0.9.0-preview2",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {},
  "config": {
    "isZeppelinNotebookCronEnable": false
  },
  "info": {}
}